StreamBuilder<Object>(
            stream: FirebaseFirestore.instance
                .collection('users')
                .doc(myUserId)
                .snapshots(),
            builder: (context, snapshot) {
              if (snapshot.connectionState == ConnectionState.waiting) {
                return const SizedBox.shrink();
              }
              if (snapshot.hasData == false) {
                return const SizedBox.shrink();
              }
              final DocumentSnapshot<Map<String, dynamic>>? documentSnapshot =
                  snapshot.data as DocumentSnapshot<Map<String, dynamic>>?;
              if (documentSnapshot == null || !documentSnapshot.exists) {
                // ドキュメントが存在しない場合の処理
                return const SizedBox.shrink();
              }
              final Map<String, dynamic> userDataMap = documentSnapshot.data()!;
              final UserData userData = UserData.fromJson(userDataMap);

              return Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  if (userData.imageUrl != '')
                    ClipOval(
                      child: Image.network(
                        userData.imageUrl,
                        width: 100,
                        height: 100,
                        fit: BoxFit.cover,
                      ),
                    )
                  else
                    ClipOval(
                      child: Image.asset(
                        'assets/images/default_user_icon.png',
                        width: 100,
                        height: 100,
                        fit: BoxFit.cover,
                      ),
                    ),
                  MarginSizedBox.smallHeightMargin,
                  Text(
                    userData.userName,
                    style: CustomFontSize.bigFontSize,
                  ),
                  MarginSizedBox.smallHeightMargin,
                  Text(myUserEmail ?? ''),
                  MarginSizedBox.miniHeightMargin,
                  Text(
                    userData.profileIntroduction,
                    style: CustomFontSize.mediumFontSize,
                  ),
                  MarginSizedBox.bigHeightMargin,
                ],
              );
            }),